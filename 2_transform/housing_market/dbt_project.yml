
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'housing_market'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'housing_market'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models
# on-run-start, see: https://github.com/duckdb/dbt-duckdb#reading-and-writing-external-files
# on-run-start:
#  - "{{ register_upstream_external_models() }}"

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  housing_market:
    +materialized: table
    staging:
      +tags:
        - "staging"
      stg_housing_market__raw:
        +pre-hook: "{% if target.name == 'dev' %}CALL load_aws_credentials(){% endif %}"
      stg_housing_market__pro:
        +pre-hook:
          - "{% if target.name == 'dev' %}CALL load_aws_credentials(){% endif %}"
        +post-hook:
          - "{% if target.name == 'dev' %}{{ export_data(this.name) }}{% endif %}"
    marts:
      +tags:
        - "marts"
      f_housing_market:

      d_region:

